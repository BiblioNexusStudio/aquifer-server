name: Pre-merge

on:
    pull_request:
        types: [opened, synchronize, reopened, ready_for_review]
        branches:
            - '**'

permissions:
    id-token: write

jobs:
    build_and_test:
        if: ${{ !github.event.pull_request.draft }}
        name: Build and test
        runs-on: ubuntu-latest
        environment:
            name: qa-tests
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4.2.2
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
            - name: Setup .NET
              uses: actions/setup-dotnet@v4.3.0
              with:
                  global-json-file: "./global.json"
                  cache: true
                  cache-dependency-path: "Directory.Packages.props"
            - name: Build
              id: build
              run: dotnet build --no-incremental -m:1 --configuration Release /p:WarningsAsErrors=true /warnaserror
            - name: Login to Azure
              uses: azure/login@v2.2.0
              with:
                  creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Test
              run: |
                  dotnet test \
                      --configuration Release \
                      --no-build \
                      --logger "trx;LogFileName=test-results.trx" \
                      -e ASPNETCORE_ENVIRONMENT="${{ vars.ASPNETCORE_ENVIRONMENT }}" \
                      -e ConnectionStrings__BiblioNexusDb="${{ secrets.BIBLIONEXUS_DB_CONNECTION_STRING }}" \
                      -e ConnectionStrings__BiblioNexusReadOnlyDb="${{ secrets.BIBLIONEXUS_DB_CONNECTION_STRING }};ApplicationIntent=ReadOnly;" \
                      -e KeyVaultUri="${{ secrets.KEY_VAULT_URI }}" \
                      -e AzureStorageAccount__BlobEndpoint="${{ vars.AZURE_STORAGE_ACCOUNT_BLOB_ENDPOINT }}" \
                      -e AzureStorageAccount__QueueEndpoint="${{ vars.AZURE_STORAGE_ACCOUNT_QUEUE_ENDPOINT }}" \
                      -e JwtSettings__Authority="${{ secrets.JWT_SETTINGS_AUTHORITY }}" \
                      -e JwtSettings__Audience="${{ secrets.JWT_SETTINGS_AUDIENCE }}" \
                      -e Auth0Settings__ApiClientId="${{ secrets.AUTH0_SETTINGS_API_CLIENT_ID }}" \
                      -e Auth0Settings__ApplicationClientId="${{ secrets.AUTH0_SETTINGS_APPLICATION_CLIENT_ID }}" \
                      -e Auth0Settings__Audience="${{ secrets.AUTH0_SETTINGS_AUDIENCE }}" \
                      -e Auth0Settings__BaseUri="${{ secrets.AUTH0_SETTINGS_BASE_URI }}" \
                      -e IntegrationTestAuth0Settings__ApplicationClientId="${{ secrets.INTEGRATION_TEST_AUTH0_SETTINGS_APPLICATION_CLIENT_ID }}" \
                      -e IntegrationTestAuth0Settings__Audience="${{ secrets.INTEGRATION_TEST_AUTH0_SETTINGS_AUDIENCE }}" \
                      -e IntegrationTestAuth0Settings__BaseUri="${{ secrets.INTEGRATION_TEST_AUTH0_SETTINGS_BASE_URI }}" \
                      -e IntegrationTestUserSettings__TestUserPassword="${{ secrets.INTEGRATION_TEST_USER_SETTINGS_TEST_USER_PASSWORD }}" \
                      -e InternalApiKey="${{ secrets.INTERNAL_API_KEY }}" \
                      -e PublicApiKey="${{ secrets.PUBLIC_API_KEY }}"
            - name: Test Results
              uses: dorny/test-reporter@v2.0.0
              if: success() || steps.build.conclusion == 'success'
              with:
                name: Test Results
                path: tests/**/*.trx
                reporter: dotnet-trx
            - name: Upload Test Results Artifacts
              uses: actions/upload-artifact@v4.6.1
              if: success() || steps.build.conclusion == 'success'
              with:
                  include-hidden-files: true
                  name: test-results
                  path: tests/**/TestResults/**/*

<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <AzureFunctionsVersion>v4</AzureFunctionsVersion>
        <OutputType>Exe</OutputType>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="Azure.Data.Tables"/>
        <PackageReference Include="Azure.Monitor.Query"/>
        <PackageReference Include="Azure.ResourceManager.ApiManagement"/>
        <PackageReference Include="Microsoft.ApplicationInsights.WorkerService"/>
        <PackageReference Include="Microsoft.Azure.Functions.Worker"/>
        <PackageReference Include="Microsoft.Azure.Functions.Worker.ApplicationInsights"/>
        <PackageReference Include="Microsoft.Azure.Functions.Worker.Extensions.DurableTask"/>
        <PackageReference Include="Microsoft.Azure.Functions.Worker.Extensions.Http"/>
        <PackageReference Include="Microsoft.Azure.Functions.Worker.Extensions.Storage.Queues"/>
        <PackageReference Include="Microsoft.Azure.Functions.Worker.Extensions.Timer"/>
        <PackageReference Include="Microsoft.Azure.Functions.Worker.Sdk"/>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Http.Polly"/>
        <PackageReference Include="Polly.Contrib.WaitAndRetry"/>
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\Aquifer.AI\Aquifer.AI.csproj"/>
        <ProjectReference Include="..\Aquifer.Common\Aquifer.Common.csproj"/>
        <ProjectReference Include="..\Aquifer.Data\Aquifer.Data.csproj"/>
        <ProjectReference Include="..\Aquifer.JsEngine\Aquifer.JsEngine.csproj"/>
    </ItemGroup>
    <ItemGroup>
        <None Update="appsettings.Production.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        </None>
        <None Update="host.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="local.settings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        </None>
        <None Update="appsettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="appsettings.Development.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <Using Include="System.Threading.ExecutionContext" Alias="ExecutionContext"/>
    </ItemGroup>

    <!-- Workaround for https://github.com/microsoft/durabletask-dotnet/issues/148 to get Jobs working on Arm64 for Mac OS X. -->
    <ItemGroup>
        <PackageReference Include="Contrib.Grpc.Core.M1"/>
    </ItemGroup>
    <Target Name="CopyGrpcNativeAssetsToOutDir" AfterTargets="Build">
        <ItemGroup>
            <NativeAssetToCopy Condition="$([MSBuild]::IsOSPlatform('OSX'))" Include="$(OutDir)runtimes/osx-arm64/native/*"/>
        </ItemGroup>
        <Copy SourceFiles="@(NativeAssetToCopy)" DestinationFolder="$(OutDir).azurefunctions/runtimes/osx-arm64/native"/>
    </Target>
    <!-- End workaround. -->
</Project>
